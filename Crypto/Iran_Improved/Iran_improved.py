#!/usr/bin/env python

import gmpy
from Crypto.Util.number import *
from secret import x, y, flag

assert gmpy.is_prime(y) ** 2017 + gmpy.is_prime(x+1) ** 2018 + ((x**2 - 1)**2 % (4*x*y - 1) + 2) ** 2019 == 60195114596394835600098365337904453203909290339267782926802235520490734165288304711128028876190843924300219790864545888256504310575296955360263869886190226526243383749017484657001118642072476645551729273766405076304063608204237662557210948948704023790697838835485847746743961966673034818112016467608381780836571628953643780985260335330971646113053292101856920976336683443432722599633895445894931616008611613374098397266979994918402938455905105740583869839521659968843917706442661974067161049185192814971652892568440545229326928534271192994370172110180253787978742523925806590626609471822068371239222313484290

p = gmpy.next_prime(x**5 + y**5)
q = gmpy.next_prime(x**2*y**3 + y**2*x**3)
n = p * q
enc = pow(bytes_to_long(flag), 0x10001, n)

print 'n =', n
print 'enc =', enc
